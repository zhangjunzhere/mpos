package com.itertk.app.mpos.dbhelper;

import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteDatabase.CursorFactory;
import android.database.sqlite.SQLiteOpenHelper;
import android.util.Log;
import de.greenrobot.dao.AbstractDaoMaster;
import de.greenrobot.dao.identityscope.IdentityScopeType;

import com.itertk.app.mpos.dbhelper.ShopDao;
import com.itertk.app.mpos.dbhelper.SystemDao;
import com.itertk.app.mpos.dbhelper.BackupDao;
import com.itertk.app.mpos.dbhelper.UserDao;
import com.itertk.app.mpos.dbhelper.BankcardDao;
import com.itertk.app.mpos.dbhelper.CatalogDao;
import com.itertk.app.mpos.dbhelper.ProductDao;
import com.itertk.app.mpos.dbhelper.RetailDao;
import com.itertk.app.mpos.dbhelper.ReduceDao;
import com.itertk.app.mpos.dbhelper.AttributeDao;
import com.itertk.app.mpos.dbhelper.AttributeValueDao;
import com.itertk.app.mpos.dbhelper.ProductAttributeDao;
import com.itertk.app.mpos.dbhelper.SaleOrderDao;
import com.itertk.app.mpos.dbhelper.SaleOrderReduceDao;
import com.itertk.app.mpos.dbhelper.SaleOrderItemDao;
import com.itertk.app.mpos.dbhelper.SaleOrderItemAttributeValueDao;
import com.itertk.app.mpos.dbhelper.SaleOrderItemReduceDao;
import com.itertk.app.mpos.dbhelper.CartDao;
import com.itertk.app.mpos.dbhelper.CartItemDao;
import com.itertk.app.mpos.dbhelper.ShopOrderDao;
import com.itertk.app.mpos.dbhelper.ShopOrderItemDao;
import com.itertk.app.mpos.dbhelper.AdvertisingDao;
import com.itertk.app.mpos.dbhelper.PermissionDao;
import com.itertk.app.mpos.dbhelper.AddressDao;
import com.itertk.app.mpos.dbhelper.GpsLocationDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * Master of DAO (schema version 416): knows all DAOs.
*/
public class DaoMaster extends AbstractDaoMaster {
    public static final int SCHEMA_VERSION = 416;

    /** Creates underlying database table using DAOs. */
    public static void createAllTables(SQLiteDatabase db, boolean ifNotExists) {
        ShopDao.createTable(db, ifNotExists);
        SystemDao.createTable(db, ifNotExists);
        BackupDao.createTable(db, ifNotExists);
        UserDao.createTable(db, ifNotExists);
        BankcardDao.createTable(db, ifNotExists);
        CatalogDao.createTable(db, ifNotExists);
        ProductDao.createTable(db, ifNotExists);
        RetailDao.createTable(db, ifNotExists);
        ReduceDao.createTable(db, ifNotExists);
        AttributeDao.createTable(db, ifNotExists);
        AttributeValueDao.createTable(db, ifNotExists);
        ProductAttributeDao.createTable(db, ifNotExists);
        SaleOrderDao.createTable(db, ifNotExists);
        SaleOrderReduceDao.createTable(db, ifNotExists);
        SaleOrderItemDao.createTable(db, ifNotExists);
        SaleOrderItemAttributeValueDao.createTable(db, ifNotExists);
        SaleOrderItemReduceDao.createTable(db, ifNotExists);
        CartDao.createTable(db, ifNotExists);
        CartItemDao.createTable(db, ifNotExists);
        ShopOrderDao.createTable(db, ifNotExists);
        ShopOrderItemDao.createTable(db, ifNotExists);
        AdvertisingDao.createTable(db, ifNotExists);
        PermissionDao.createTable(db, ifNotExists);
        AddressDao.createTable(db, ifNotExists);
        GpsLocationDao.createTable(db, ifNotExists);
    }
    
    /** Drops underlying database table using DAOs. */
    public static void dropAllTables(SQLiteDatabase db, boolean ifExists) {
        ShopDao.dropTable(db, ifExists);
        SystemDao.dropTable(db, ifExists);
        BackupDao.dropTable(db, ifExists);
        UserDao.dropTable(db, ifExists);
        BankcardDao.dropTable(db, ifExists);
        CatalogDao.dropTable(db, ifExists);
        ProductDao.dropTable(db, ifExists);
        RetailDao.dropTable(db, ifExists);
        ReduceDao.dropTable(db, ifExists);
        AttributeDao.dropTable(db, ifExists);
        AttributeValueDao.dropTable(db, ifExists);
        ProductAttributeDao.dropTable(db, ifExists);
        SaleOrderDao.dropTable(db, ifExists);
        SaleOrderReduceDao.dropTable(db, ifExists);
        SaleOrderItemDao.dropTable(db, ifExists);
        SaleOrderItemAttributeValueDao.dropTable(db, ifExists);
        SaleOrderItemReduceDao.dropTable(db, ifExists);
        CartDao.dropTable(db, ifExists);
        CartItemDao.dropTable(db, ifExists);
        ShopOrderDao.dropTable(db, ifExists);
        ShopOrderItemDao.dropTable(db, ifExists);
        AdvertisingDao.dropTable(db, ifExists);
        PermissionDao.dropTable(db, ifExists);
        AddressDao.dropTable(db, ifExists);
        GpsLocationDao.dropTable(db, ifExists);
    }
    
    public static abstract class OpenHelper extends SQLiteOpenHelper {

        public OpenHelper(Context context, String name, CursorFactory factory) {
            super(context, name, factory, SCHEMA_VERSION);
        }

        @Override
        public void onCreate(SQLiteDatabase db) {
            Log.i("greenDAO", "Creating tables for schema version " + SCHEMA_VERSION);
            createAllTables(db, false);
        }
    }
    
    /** WARNING: Drops all table on Upgrade! Use only during development. */
    public static class DevOpenHelper extends OpenHelper {
        public DevOpenHelper(Context context, String name, CursorFactory factory) {
            super(context, name, factory);
        }

        @Override
        public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
            Log.i("greenDAO", "Upgrading schema from version " + oldVersion + " to " + newVersion + " by dropping all tables");
            dropAllTables(db, true);
            onCreate(db);
        }
    }

    public DaoMaster(SQLiteDatabase db) {
        super(db, SCHEMA_VERSION);
        registerDaoClass(ShopDao.class);
        registerDaoClass(SystemDao.class);
        registerDaoClass(BackupDao.class);
        registerDaoClass(UserDao.class);
        registerDaoClass(BankcardDao.class);
        registerDaoClass(CatalogDao.class);
        registerDaoClass(ProductDao.class);
        registerDaoClass(RetailDao.class);
        registerDaoClass(ReduceDao.class);
        registerDaoClass(AttributeDao.class);
        registerDaoClass(AttributeValueDao.class);
        registerDaoClass(ProductAttributeDao.class);
        registerDaoClass(SaleOrderDao.class);
        registerDaoClass(SaleOrderReduceDao.class);
        registerDaoClass(SaleOrderItemDao.class);
        registerDaoClass(SaleOrderItemAttributeValueDao.class);
        registerDaoClass(SaleOrderItemReduceDao.class);
        registerDaoClass(CartDao.class);
        registerDaoClass(CartItemDao.class);
        registerDaoClass(ShopOrderDao.class);
        registerDaoClass(ShopOrderItemDao.class);
        registerDaoClass(AdvertisingDao.class);
        registerDaoClass(PermissionDao.class);
        registerDaoClass(AddressDao.class);
        registerDaoClass(GpsLocationDao.class);
    }
    
    public DaoSession newSession() {
        return new DaoSession(db, IdentityScopeType.Session, daoConfigMap);
    }
    
    public DaoSession newSession(IdentityScopeType type) {
        return new DaoSession(db, type, daoConfigMap);
    }
    
}
